// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VacantesApi.Models;

namespace VacantesApi.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20201215032736_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("VacantesApi.Models.Candidatos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VacanteID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VacanteID");

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("VacantesApi.Models.Carreras", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Actualizado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Creado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreCarrera")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("VacantesApi.Models.Habilidades", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("CarreraID")
                        .HasColumnType("int");

                    b.Property<string>("NombreHabilidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CarreraID");

                    b.ToTable("Habilidades");
                });

            modelBuilder.Entity("VacantesApi.Models.Usuarios", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("VacantesApi.Models.Vacantes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Actualizado")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CarreraID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Creado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Experiencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Habilidades")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IDCarrera")
                        .HasColumnType("int");

                    b.Property<string>("Salario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CarreraID");

                    b.ToTable("Vacantes");
                });

            modelBuilder.Entity("VacantesApi.Models.Candidatos", b =>
                {
                    b.HasOne("VacantesApi.Models.Vacantes", "Vacante")
                        .WithMany("Candidatos")
                        .HasForeignKey("VacanteID");

                    b.Navigation("Vacante");
                });

            modelBuilder.Entity("VacantesApi.Models.Habilidades", b =>
                {
                    b.HasOne("VacantesApi.Models.Carreras", "Carrera")
                        .WithMany()
                        .HasForeignKey("CarreraID");

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("VacantesApi.Models.Vacantes", b =>
                {
                    b.HasOne("VacantesApi.Models.Carreras", "Carrera")
                        .WithMany()
                        .HasForeignKey("CarreraID");

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("VacantesApi.Models.Vacantes", b =>
                {
                    b.Navigation("Candidatos");
                });
#pragma warning restore 612, 618
        }
    }
}
